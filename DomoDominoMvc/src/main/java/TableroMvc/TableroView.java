/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TableroMvc;

import dtos.FichaDto;
import dtos.JugadorDto;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import mediador.IComponente;
import mediador.IMediador;
import observers.IObserver;

public class TableroView extends javax.swing.JFrame implements IObserver, IComponente {

    private TableroModel tableroModel;
    private IMediador mediador;
    private JugadorDto jugador;
    private FichaDto fichaSeleccionada = null;
    private MouseAdapter oyenteMouse;
    private TableroPanel tableroPanel;
    private JPanel fichasJugadorPanel;

    /**
     * Creates new form TableroView
     *
     * @param tableroModel
     */
    public TableroView(TableroModel tableroModel, JugadorDto jugador) {

        initComponents();
        this.tableroModel = tableroModel;
//        this.tableroModel.agregarObservador(this);
        this.jugador = jugador;
        setLayout(new BorderLayout());

        setLayout(new BorderLayout());

        tableroPanel = new TableroPanel();

        add(tableroPanel, BorderLayout.CENTER);

        fichasJugadorPanel = new JPanel();
        fichasJugadorPanel.setLayout(new FlowLayout());

        add(fichasJugadorPanel, BorderLayout.SOUTH);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    public class TableroPanel extends JPanel {

        private int[][] tablero;

        public TableroPanel() {
            setPreferredSize(new Dimension(800, 800));
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            int cellSize = 40;

            for (int i = 0; i < tablero.length; i++) {
                for (int j = 0; j < tablero[i].length; j++) {
                    g.drawRect(j * cellSize, i * cellSize, cellSize, cellSize);
                    g.drawString(String.valueOf(tablero[i][j]), j * cellSize + cellSize / 4, i * cellSize + cellSize / 2);
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nWFiIuU.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public void agregarOyenteMouse(MouseAdapter oyente) {
        this.oyenteMouse = oyente;
    }

    @Override
    public void setMediador(IMediador mediador) {
        this.mediador = mediador;
    }

    @Override
    public void actualizar() {
        
        
        jugador.agregarFichas(tableroModel.getFichas());
        
        for (FichaDto ficha : jugador.getFichas()) {
            String rutaImagen = String.format("C:\\Users\\tacot\\OneDrive\\Documentos\\GitHub\\Proyecto-de-Arquitectura\\DomoDominoMvc\\src\\main\\resources\\imgPartidaFichas\\ficha%d_%d.png", ficha.getLado1(), ficha.getLado2());
            ImageIcon icono = new ImageIcon(rutaImagen);
            JLabel fichaLabel = new JLabel(icono);
            fichaLabel.addMouseListener(oyenteMouse);
            fichasJugadorPanel.add(fichaLabel);
        }
        
        this.repaint();
        this.tableroPanel.repaint();

    }

    public void actualizarFichaSelecionada() {
        tableroModel.actualizarFichaSelecionada(fichaSeleccionada);
    }
}
